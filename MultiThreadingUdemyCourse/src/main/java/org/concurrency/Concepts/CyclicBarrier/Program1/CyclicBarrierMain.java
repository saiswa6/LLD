package org.concurrency.Concepts.CyclicBarrier.Program1;

import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class CyclicBarrierMain {
    public static void main(String[] args) {
        ExecutorService executorService = Executors.newFixedThreadPool(5);
        // 5 is the number of parties (number of threads)
        CyclicBarrier barrier = new CyclicBarrier(5, () -> {
            System.out.println("All tasks have been finished ......");
        });

        for (int i = 0; i < 5 ; i++) {
            executorService.submit(new CyclicBarrierWorker(i+1, barrier));
        }

        executorService.shutdown();
    }

    /*
    Thread with ID 5 starts the work ...
    Thread with ID 3 starts the work ...
    Thread with ID 4 starts the work ...
    Thread with ID 2 starts the work ...
    Thread with ID 1 starts the work ...
    All tasks have been finished ......
    After the await() .....
    After the await() .....
    After the await() .....
    After the await() .....
    After the await() .....
     */
}
